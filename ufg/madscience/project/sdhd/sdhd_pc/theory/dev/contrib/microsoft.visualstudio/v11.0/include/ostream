// File Line: 48
// RVA: 0x85270
void __fastcall std::basic_ostream<char,std::char_traits<char>>::basic_ostream<char,std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char> > *this, std::basic_streambuf<char,std::char_traits<char> > *_Strbuf, bool _Isstd, int a4)
{
  _QWORD *v4; // ST30_8

  if ( a4 )
  {
    *(_QWORD *)this->gap0 = &std::basic_ostream<char,std::char_traits<char>>::`vbtable;
    v4 = &this->gap0[16];
    *v4 = &std::ios_base::`vftable;
    *v4 = &std::basic_ios<char,std::char_traits<char>>::`vftable;
  }
  *(_QWORD *)&this->gap0[*(signed int *)(*(_QWORD *)this->gap0 + 4i64)] = &std::basic_ostream<char,std::char_traits<char>>::`vftable;
  *(_DWORD *)&this->gap0[*(signed int *)(*(_QWORD *)this->gap0 + 4i64) - 4] = *(_DWORD *)(*(_QWORD *)this->gap0 + 4i64)
                                                                            - 16;
  std::basic_ios<char,std::char_traits<char>>::init(
    (std::basic_ios<char,std::char_traits<char> > *)&this->gap0[*(signed int *)(*(_QWORD *)this->gap0 + 4i64)],
    _Strbuf,
    _Isstd);
}

// File Line: 109
// RVA: 0x82D20
void __fastcall std::basic_ostream<char,std::char_traits<char>>::_Sentry_base::~_Sentry_base(std::basic_ostream<char,std::char_traits<char> >::_Sentry_base *this)
{
  __int64 v1; // rcx

  v1 = *(_QWORD *)&this->_Myostr->gap0[*(signed int *)(*(_QWORD *)this->_Myostr->gap0 + 4i64) + 72];
  if ( v1 )
    (*(void (**)(void))(*(_QWORD *)v1 + 16i64))();
}

// File Line: 133
// RVA: 0x82E30
void __fastcall std::basic_ostream<char,std::char_traits<char>>::sentry::~sentry(std::basic_ostream<char,std::char_traits<char> >::sentry *this)
{
  std::basic_ostream<char,std::char_traits<char> >::sentry *v1; // rbx
  __int64 v2; // rcx

  v1 = this;
  if ( !std::uncaught_exception() )
    std::basic_ostream<char,std::char_traits<char>>::_Osfx(v1->_Myostr);
  v2 = *(_QWORD *)&v1->_Myostr->gap0[*(signed int *)(*(_QWORD *)v1->_Myostr->gap0 + 4i64) + 72];
  if ( v2 )
    (*(void (**)(void))(*(_QWORD *)v2 + 16i64))();
}

// File Line: 170
// RVA: 0x83490
void __fastcall std::basic_ostream<char,std::char_traits<char>>::_Osfx(std::basic_ostream<char,std::char_traits<char> > *this)
{
  std::basic_ostream<char,std::char_traits<char> > *v1; // rbx
  __int64 v2; // rdx
  std::ios_base *v3; // rcx
  int v4; // edx

  v1 = this;
  v2 = *(signed int *)(*(_QWORD *)this->gap0 + 4i64);
  if ( !*(_DWORD *)&this->gap0[v2 + 16]
    && this->gap0[v2 + 24] & 2
    && (*(unsigned int (__cdecl **)(_QWORD))(**(_QWORD **)&this->gap0[v2 + 72] + 104i64))(*(_QWORD *)&this->gap0[v2 + 72]) == -1 )
  {
    v3 = (std::ios_base *)&v1->gap0[*(signed int *)(*(_QWORD *)v1->gap0 + 4i64)];
    v4 = v3->_Mystate | 4;
    if ( !v3[1].vfptr )
      v4 = v3->_Mystate | 4;
    std::ios_base::clear(v3, v4, 0);
  }
}

// File Line: 175
// RVA: 0x1341280
`std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0

// File Line: 296
// RVA: 0x85400
std::basic_ostream<char,std::char_traits<char> > *__fastcall std::basic_ostream<char,std::char_traits<char>>::operator<<(std::basic_ostream<char,std::char_traits<char> > *this, int _Val)
{
  std::basic_ostream<char,std::char_traits<char> > *v2; // rbx
  signed int v3; // edi
  __int64 v4; // rcx
  __int64 v5; // rcx
  std::basic_ostream<char,std::char_traits<char> > *v6; // rcx
  std::locale *v7; // rax
  std::locale::facet *v8; // rsi
  void (__fastcall ***v9)(_QWORD, signed __int64); // rax
  char *v10; // r9
  __int64 v11; // rax
  std::ios_base *v12; // rcx
  int v13; // edx
  __int64 v14; // rcx
  __m128i v16; // [rsp+40h] [rbp-48h]
  std::basic_ostream<char,std::char_traits<char> > *v17; // [rsp+50h] [rbp-38h]
  bool v18; // [rsp+58h] [rbp-30h]
  __int128 v19; // [rsp+60h] [rbp-28h]
  std::locale result; // [rsp+A0h] [rbp+18h]

  v2 = this;
  v3 = 0;
  v17 = this;
  v4 = *(_QWORD *)&this->gap0[*(signed int *)(*(_QWORD *)this->gap0 + 4i64) + 72];
  if ( v4 )
    (*(void (**)(void))(*(_QWORD *)v4 + 8i64))();
  v5 = *(signed int *)(*(_QWORD *)v2->gap0 + 4i64);
  if ( !*(_DWORD *)&v2->gap0[v5 + 16] )
  {
    v6 = *(std::basic_ostream<char,std::char_traits<char> > **)&v2->gap0[v5 + 80];
    if ( v6 )
      std::basic_ostream<char,std::char_traits<char>>::flush(v6);
  }
  v18 = *(_DWORD *)&v2->gap0[*(signed int *)(*(_QWORD *)v2->gap0 + 4i64) + 16] == 0;
  if ( v18 )
  {
    v7 = std::ios_base::getloc((std::ios_base *)&v2->gap0[*(signed int *)(*(_QWORD *)v2->gap0 + 4i64)], &result);
    v8 = std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>>(v7);
    if ( result._Ptr )
    {
      v9 = (void (__fastcall ***)(_QWORD, signed __int64))((__int64 (*)(void))result._Ptr->vfptr->_Decref)();
      if ( v9 )
        (**v9)(v9, 1i64);
    }
    v10 = &v2->gap0[*(signed int *)(*(_QWORD *)v2->gap0 + 4i64)];
    v11 = *((_QWORD *)v10 + 9);
    v16.m128i_i8[0] = 0;
    v16.m128i_i64[1] = v11;
    LOBYTE(v11) = v10[88];
    _mm_store_si128((__m128i *)&v19, v16);
    ((void (__fastcall *)(std::locale::facet *, __m128i *, __int128 *))v8->vfptr[3].__vecDelDtor)(v8, &v16, &v19);
    if ( v16.m128i_i8[0] )
      v3 = 4;
  }
  v12 = (std::ios_base *)&v2->gap0[*(signed int *)(*(_QWORD *)v2->gap0 + 4i64)];
  if ( v3 )
  {
    v13 = v3 | v12->_Mystate;
    if ( !v12[1].vfptr )
      v13 |= 4u;
    std::ios_base::clear(v12, v13, 0);
  }
  if ( !std::uncaught_exception() )
    std::basic_ostream<char,std::char_traits<char>>::_Osfx(v2);
  v14 = *(_QWORD *)&v2->gap0[*(signed int *)(*(_QWORD *)v2->gap0 + 4i64) + 72];
  if ( v14 )
    (*(void (**)(void))(*(_QWORD *)v14 + 16i64))();
  return v2;
}

// File Line: 313
// RVA: 0x13415F4
`std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::catch$0

// File Line: 585
// RVA: 0x83CF0
std::basic_ostream<char,std::char_traits<char> > *__fastcall std::basic_ostream<char,std::char_traits<char>>::flush(std::basic_ostream<char,std::char_traits<char> > *this)
{
  std::basic_ostream<char,std::char_traits<char> > *v1; // rbx
  __int64 v2; // rdx
  __int64 v3; // rcx
  __int64 v4; // rcx
  std::basic_ostream<char,std::char_traits<char> > *v5; // rcx
  __int64 v6; // rcx
  std::ios_base *v7; // rcx
  int v8; // edx
  __int64 v9; // rcx

  v1 = this;
  v2 = *(signed int *)(*(_QWORD *)this->gap0 + 4i64);
  v3 = *(_QWORD *)&this->gap0[v2 + 72];
  if ( v3 )
  {
    (*(void (__cdecl **)(__int64, __int64))(*(_QWORD *)v3 + 8i64))(v3, v2);
    v4 = *(signed int *)(*(_QWORD *)v1->gap0 + 4i64);
    if ( !*(_DWORD *)&v1->gap0[v4 + 16] )
    {
      v5 = *(std::basic_ostream<char,std::char_traits<char> > **)&v1->gap0[v4 + 80];
      if ( v5 )
        std::basic_ostream<char,std::char_traits<char>>::flush(v5);
    }
    if ( *(_DWORD *)&v1->gap0[*(signed int *)(*(_QWORD *)v1->gap0 + 4i64) + 16] == 0 )
    {
      v6 = *(_QWORD *)&v1->gap0[*(signed int *)(*(_QWORD *)v1->gap0 + 4i64) + 72];
      if ( (*(unsigned int (__cdecl **)(__int64))(*(_QWORD *)v6 + 104i64))(v6) == -1 )
      {
        v7 = (std::ios_base *)&v1->gap0[*(signed int *)(*(_QWORD *)v1->gap0 + 4i64)];
        v8 = v7->_Mystate | 4;
        if ( !v7[1].vfptr )
          v8 = v7->_Mystate | 4;
        std::ios_base::clear(v7, v8, 0);
      }
    }
    if ( !std::uncaught_exception() )
      std::basic_ostream<char,std::char_traits<char>>::_Osfx(v1);
    v9 = *(_QWORD *)&v1->gap0[*(signed int *)(*(_QWORD *)v1->gap0 + 4i64) + 72];
    if ( v9 )
      (*(void (__cdecl **)(__int64))(*(_QWORD *)v9 + 16i64))(v9);
  }
  return v1;
}

// File Line: 783
// RVA: 0x84B00
std::basic_ostream<char,std::char_traits<char> > *__fastcall std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char> > *_Ostr, const char *_Val)
{
  const char *v2; // r12
  std::basic_ostream<char,std::char_traits<char> > *v3; // rsi
  signed int v4; // edi
  signed __int64 v5; // r14
  __int64 v6; // rcx
  __int64 v7; // rbx
  signed __int64 v8; // rbx
  __int64 v9; // rcx
  __int64 v10; // rcx
  std::basic_ostream<char,std::char_traits<char> > *v11; // rcx
  __int64 v12; // rcx
  unsigned __int8 v13; // r8
  _QWORD *v14; // rcx
  _DWORD *v15; // rdx
  _QWORD *v16; // rcx
  unsigned __int8 *v17; // rdx
  int v18; // eax
  __int64 v19; // rcx
  __int64 v20; // rcx
  unsigned __int8 v21; // r8
  _QWORD *v22; // rcx
  _DWORD *v23; // rdx
  _QWORD *v24; // rcx
  unsigned __int8 *v25; // rdx
  int v26; // eax
  char *v27; // rcx
  int v28; // eax
  int v29; // eax
  int v30; // edx
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > *v31; // rax
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > *v32; // rax
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > *v33; // rax
  __int64 v34; // rcx
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > v36; // [rsp+20h] [rbp-F8h]
  int v37; // [rsp+40h] [rbp-D8h]
  __int64 v38; // [rsp+48h] [rbp-D0h]
  __int64 v39; // [rsp+58h] [rbp-C0h]
  std::basic_ostream<char,std::char_traits<char> > *v40; // [rsp+60h] [rbp-B8h]
  bool v41; // [rsp+68h] [rbp-B0h]
  std::exception pExceptionObject; // [rsp+70h] [rbp-A8h]
  __int64 v43; // [rsp+88h] [rbp-90h]
  std::_Iostream_error_category *v44; // [rsp+90h] [rbp-88h]
  std::exception v45; // [rsp+98h] [rbp-80h]
  __int64 v46; // [rsp+B0h] [rbp-68h]
  std::_Iostream_error_category *v47; // [rsp+B8h] [rbp-60h]
  std::exception v48; // [rsp+C0h] [rbp-58h]
  __int64 v49; // [rsp+D8h] [rbp-40h]
  std::_Iostream_error_category *v50; // [rsp+E0h] [rbp-38h]
  __int64 v51; // [rsp+E8h] [rbp-30h]
  char *_What; // [rsp+120h] [rbp+8h]

  _What = (char *)_Ostr;
  v51 = -2i64;
  v2 = _Val;
  v3 = _Ostr;
  v4 = 0;
  v37 = 0;
  if ( *_Val )
  {
    v5 = -1i64;
    do
      ++v5;
    while ( _Val[v5] );
  }
  else
  {
    v5 = 0i64;
  }
  v6 = *(signed int *)(*(_QWORD *)_Ostr->gap0 + 4i64);
  v7 = *(_QWORD *)&v3->gap0[v6 + 40];
  if ( v7 <= 0 || v7 <= v5 )
    v8 = 0i64;
  else
    v8 = v7 - v5;
  v40 = v3;
  v9 = *(_QWORD *)&v3->gap0[v6 + 72];
  if ( v9 )
    (*(void (**)(void))(*(_QWORD *)v9 + 8i64))();
  v10 = *(signed int *)(*(_QWORD *)v3->gap0 + 4i64);
  if ( !*(_DWORD *)&v3->gap0[v10 + 16] )
  {
    v11 = *(std::basic_ostream<char,std::char_traits<char> > **)&v3->gap0[v10 + 80];
    if ( v11 )
      std::basic_ostream<char,std::char_traits<char>>::flush(v11);
  }
  v41 = *(_DWORD *)&v3->gap0[*(signed int *)(*(_QWORD *)v3->gap0 + 4i64) + 16] == 0;
  if ( v41 )
  {
    if ( (*(_DWORD *)&v3->gap0[*(signed int *)(*(_QWORD *)v3->gap0 + 4i64) + 24] & 0x1C0) == 64 )
      goto LABEL_69;
    while ( v8 > 0 )
    {
      v12 = *(signed int *)(*(_QWORD *)v3->gap0 + 4i64);
      v13 = v3->gap0[v12 + 88];
      v14 = *(_QWORD **)&v3->gap0[v12 + 72];
      if ( *(_QWORD *)v14[8] && (v15 = (_DWORD *)v14[11], *v15 > 0) )
      {
        --*v15;
        v16 = (_QWORD *)v14[8];
        v17 = (unsigned __int8 *)(*v16)++;
        *v17 = v13;
        v18 = v13;
      }
      else
      {
        v18 = (*(__int64 (__fastcall **)(_QWORD *, _QWORD))(*v14 + 24i64))(v14, v13);
      }
      if ( v18 == -1 )
      {
        v4 = 4;
        v37 = 4;
        break;
      }
      v39 = --v8;
    }
    if ( !v4 )
    {
LABEL_69:
      v19 = *(_QWORD *)&v3->gap0[*(signed int *)(*(_QWORD *)v3->gap0 + 4i64) + 72];
      if ( (*(__int64 (__fastcall **)(__int64, const char *, signed __int64))(*(_QWORD *)v19 + 72i64))(v19, v2, v5) == v5 )
      {
        while ( v8 > 0 )
        {
          v20 = *(signed int *)(*(_QWORD *)v3->gap0 + 4i64);
          v21 = v3->gap0[v20 + 88];
          v22 = *(_QWORD **)&v3->gap0[v20 + 72];
          if ( *(_QWORD *)v22[8] && (v23 = (_DWORD *)v22[11], *v23 > 0) )
          {
            --*v23;
            v24 = (_QWORD *)v22[8];
            v25 = (unsigned __int8 *)(*v24)++;
            *v25 = v21;
            v26 = v21;
          }
          else
          {
            v26 = (*(__int64 (__fastcall **)(_QWORD *, _QWORD))(*v22 + 24i64))(v22, v21);
          }
          if ( v26 == -1 )
          {
            v4 |= 4u;
            goto LABEL_36;
          }
          v39 = --v8;
        }
      }
      else
      {
        v4 = 4;
LABEL_36:
        v37 = v4;
      }
    }
    *(_QWORD *)&v3->gap0[*(signed int *)(*(_QWORD *)v3->gap0 + 4i64) + 40] = 0i64;
  }
  else
  {
    v4 = 4;
  }
  v27 = &v3->gap0[*(signed int *)(*(_QWORD *)v3->gap0 + 4i64)];
  if ( v4 )
  {
    v28 = v4 | *((_DWORD *)v27 + 4);
    if ( !*((_QWORD *)v27 + 9) )
      LOBYTE(v28) = v28 | 4;
    v29 = v28 & 0x17;
    *((_DWORD *)v27 + 4) = v29;
    v30 = v29 & *((_DWORD *)v27 + 5);
    if ( v29 & *((_DWORD *)v27 + 5) )
    {
      LODWORD(v38) = 1;
      v36._Bx._Buf[0] = 0;
      v36._Mysize = 0i64;
      v36._Myres = 15i64;
      if ( v30 & 4 )
      {
        std::basic_string<char,std::char_traits<char>,std::allocator<char>>::assign(
          &v36,
          "ios_base::badbit set",
          0x14ui64);
        v31 = &v36;
        if ( v36._Myres >= 0x10 )
          v31 = (std::basic_string<char,std::char_traits<char>,std::allocator<char> > *)v36._Bx._Ptr;
        _What = (char *)v31;
        std::exception::exception(&pExceptionObject, (const char *const *)&_What);
        pExceptionObject.vfptr = (std::exceptionVtbl *)&std::system_error::`vftable;
        v43 = v38;
        v44 = &std::_Error_objects<int>::_Iostream_object;
        if ( v36._Myres >= 0x10 )
          Illusion::ShaderParam::operator delete(v36._Bx._Ptr);
        v36._Myres = 15i64;
        v36._Mysize = 0i64;
        v36._Bx._Buf[0] = 0;
        pExceptionObject.vfptr = (std::exceptionVtbl *)&std::ios_base::failure::`vftable;
        CxxThrowException(&pExceptionObject, &TI4_AVfailure_ios_base_std__);
      }
      if ( v30 & 2 )
      {
        std::basic_string<char,std::char_traits<char>,std::allocator<char>>::assign(
          &v36,
          "ios_base::failbit set",
          0x15ui64);
        v32 = &v36;
        if ( v36._Myres >= 0x10 )
          v32 = (std::basic_string<char,std::char_traits<char>,std::allocator<char> > *)v36._Bx._Ptr;
        _What = (char *)v32;
        std::exception::exception(&v48, (const char *const *)&_What);
        v48.vfptr = (std::exceptionVtbl *)&std::system_error::`vftable;
        v49 = v38;
        v50 = &std::_Error_objects<int>::_Iostream_object;
        if ( v36._Myres >= 0x10 )
          Illusion::ShaderParam::operator delete(v36._Bx._Ptr);
        v36._Myres = 15i64;
        v36._Mysize = 0i64;
        v36._Bx._Buf[0] = 0;
        v48.vfptr = (std::exceptionVtbl *)&std::ios_base::failure::`vftable;
        CxxThrowException(&v48, &TI4_AVfailure_ios_base_std__);
      }
      std::basic_string<char,std::char_traits<char>,std::allocator<char>>::assign(
        &v36,
        "ios_base::eofbit set",
        0x14ui64);
      v33 = &v36;
      if ( v36._Myres >= 0x10 )
        v33 = (std::basic_string<char,std::char_traits<char>,std::allocator<char> > *)v36._Bx._Ptr;
      _What = (char *)v33;
      std::exception::exception(&v45, (const char *const *)&_What);
      v45.vfptr = (std::exceptionVtbl *)&std::system_error::`vftable;
      v46 = v38;
      v47 = &std::_Error_objects<int>::_Iostream_object;
      if ( v36._Myres >= 0x10 )
        Illusion::ShaderParam::operator delete(v36._Bx._Ptr);
      v36._Myres = 15i64;
      v36._Mysize = 0i64;
      v36._Bx._Buf[0] = 0;
      v45.vfptr = (std::exceptionVtbl *)&std::ios_base::failure::`vftable;
      CxxThrowException(&v45, &TI4_AVfailure_ios_base_std__);
    }
  }
  if ( !std::uncaught_exception() )
    std::basic_ostream<char,std::char_traits<char>>::_Osfx(v3);
  v34 = *(_QWORD *)&v3->gap0[*(signed int *)(*(_QWORD *)v3->gap0 + 4i64) + 72];
  if ( v34 )
    (*(void (**)(void))(*(_QWORD *)v34 + 16i64))();
  return v3;
}ght_excepti

// File Line: 819
// RVA: 0x1341478
`std::operator<<<std::char_traits<char> >'::`1'::catch$0

